{
	"id": "2e9ceb18-9536-4314-a355-9d9953296372",
	"name": "Bookshelf API Test",
	"timestamp": "2021-05-17T08:51:05.221Z",
	"collection_id": "8d2383c7-ed9f-4630-83a5-9b0e397ae17e",
	"folder_id": 0,
	"environment_id": "a771c245-a954-4666-bb3c-bb25bbe64288",
	"totalPass": 77,
	"totalFail": 10,
	"results": [
		{
			"id": "b9d9b647-9086-44fc-a478-f4805d465da3",
			"name": "[Mandatory] Add Book With Complete Data",
			"url": "http://localhost:5000/books",
			"time": 1615,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"status code should be 201": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": true,
				"response body data should contain bookId": true
			},
			"testPassFailCounts": {
				"status code should be 201": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"response body data should contain bookId": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				1615
			],
			"allTests": [
				{
					"status code should be 201": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": true,
					"response body data should contain bookId": true
				}
			]
		},
		{
			"id": "600e1121-f19a-4fce-83d8-2e33f04ee62f",
			"name": "[Mandatory] Add Book Without Name",
			"url": "http://localhost:5000/books",
			"time": 45,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"status code should be 400": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": true
			},
			"testPassFailCounts": {
				"status code should be 400": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				45
			],
			"allTests": [
				{
					"status code should be 400": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": true
				}
			]
		},
		{
			"id": "060b7cad-f101-4bbc-92f5-b866c703ba42",
			"name": "[Mandatory] Add Book with Page Read More Than Page Count",
			"url": "http://localhost:5000/books",
			"time": 14,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"status code should be 400": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": true
			},
			"testPassFailCounts": {
				"status code should be 400": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				14
			],
			"allTests": [
				{
					"status code should be 400": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": true
				}
			]
		},
		{
			"id": "b1c866b1-e47d-4135-8bc8-3c646657dbf1",
			"name": "[Mandatory] Get All Books",
			"url": "http://localhost:5000/books",
			"time": 95,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"status code should be 200": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body object should have correct property and value": true,
				"response body data object should have a array books and contains one items": false,
				"the books should have contains only id, name, and publisher property": false
			},
			"testPassFailCounts": {
				"status code should be 200": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body object should have correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"response body data object should have a array books and contains one items": {
					"pass": 0,
					"fail": 1
				},
				"the books should have contains only id, name, and publisher property": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				95
			],
			"allTests": [
				{
					"status code should be 200": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body object should have correct property and value": true,
					"response body data object should have a array books and contains one items": false,
					"the books should have contains only id, name, and publisher property": false
				}
			]
		},
		{
			"id": "82d116b7-c81f-42bc-b58e-92c6d4b3e1b0",
			"name": "[Mandatory] Get Detail Books With Correct Id",
			"url": "http://localhost:5000/books/ypl2E6GLHGEUJjrG",
			"time": 13,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"response code should be 200": true,
				"response header Content-Type should be application/json": true,
				"response body should an object": true,
				"response body object should contain correct property and value": true,
				"response body data object should contain book object": true,
				"book object should contain correct property and value": true
			},
			"testPassFailCounts": {
				"response code should be 200": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should an object": {
					"pass": 1,
					"fail": 0
				},
				"response body object should contain correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"response body data object should contain book object": {
					"pass": 1,
					"fail": 0
				},
				"book object should contain correct property and value": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				13
			],
			"allTests": [
				{
					"response code should be 200": true,
					"response header Content-Type should be application/json": true,
					"response body should an object": true,
					"response body object should contain correct property and value": true,
					"response body data object should contain book object": true,
					"book object should contain correct property and value": true
				}
			]
		},
		{
			"id": "72835945-79a5-4767-acae-f9d4f9510085",
			"name": "[Mandatory] Get Detail Books With Invalid Id",
			"url": "http://localhost:5000/books/xxxxx",
			"time": 12,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"response code should be 404": true,
				"response header Content-Type should be application/json": true,
				"response body should an object": true,
				"response body object should contain correct property and value": true
			},
			"testPassFailCounts": {
				"response code should be 404": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should an object": {
					"pass": 1,
					"fail": 0
				},
				"response body object should contain correct property and value": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				12
			],
			"allTests": [
				{
					"response code should be 404": true,
					"response header Content-Type should be application/json": true,
					"response body should an object": true,
					"response body object should contain correct property and value": true
				}
			]
		},
		{
			"id": "53b9f9d4-cdba-40c9-ba32-8ae5c8dd3a9b",
			"name": "[Mandatory] Update Book With Complete Data",
			"url": "http://localhost:5000/books/ypl2E6GLHGEUJjrG",
			"time": 15,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"status code should be 200": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": true,
				"when get detail books": true,
				"book object should contain updated values": true
			},
			"testPassFailCounts": {
				"status code should be 200": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"when get detail books": {
					"pass": 1,
					"fail": 0
				},
				"book object should contain updated values": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				15
			],
			"allTests": [
				{
					"status code should be 200": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": true,
					"when get detail books": true,
					"book object should contain updated values": true
				}
			]
		},
		{
			"id": "43059da2-5e56-4428-a0d7-9bc357052ca0",
			"name": "[Mandatory] Update Book Without Name",
			"url": "http://localhost:5000/books/ypl2E6GLHGEUJjrG",
			"time": 13,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"status code should be 400": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": true
			},
			"testPassFailCounts": {
				"status code should be 400": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				13
			],
			"allTests": [
				{
					"status code should be 400": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": true
				}
			]
		},
		{
			"id": "de5b43e1-7aa7-4c63-8d35-7c941be57dce",
			"name": "[Mandatory] Update Book With Page Read More Than Page Count",
			"url": "http://localhost:5000/books/ypl2E6GLHGEUJjrG",
			"time": 31,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"status code should be 400": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": true
			},
			"testPassFailCounts": {
				"status code should be 400": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				31
			],
			"allTests": [
				{
					"status code should be 400": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": true
				}
			]
		},
		{
			"id": "56e18883-93fe-4c95-8c40-453a8af82502",
			"name": "[Mandatory] Update Book with Invalid Id",
			"url": "http://localhost:5000/books/xxxxx",
			"time": 12,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"status code should be 404": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": true
			},
			"testPassFailCounts": {
				"status code should be 404": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				12
			],
			"allTests": [
				{
					"status code should be 404": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": true
				}
			]
		},
		{
			"id": "ae89562f-01a2-4d48-864e-4e4ffd7eec39",
			"name": "[Mandatory] Delete Book with Correct Id",
			"url": "http://localhost:5000/books/ypl2E6GLHGEUJjrG",
			"time": 12,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"status code should be 200": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": true,
				"when get detail books": true,
				"The book should be not found": true
			},
			"testPassFailCounts": {
				"status code should be 200": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"when get detail books": {
					"pass": 1,
					"fail": 0
				},
				"The book should be not found": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				12
			],
			"allTests": [
				{
					"status code should be 200": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": true,
					"when get detail books": true,
					"The book should be not found": true
				}
			]
		},
		{
			"id": "2e1e8c94-2ff7-4e71-bf05-87df5421fafc",
			"name": "[Mandatory] Delete Book with Invalid Id",
			"url": "http://localhost:5000/books/xxxxx",
			"time": 11,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"status code should be 404": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": true
			},
			"testPassFailCounts": {
				"status code should be 404": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				11
			],
			"allTests": [
				{
					"status code should be 404": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": true
				}
			]
		},
		{
			"id": "23f9e914-959b-45e0-8a6d-2f187181c68d",
			"name": "Add Reading and Finished Book",
			"url": "http://localhost:5000/books",
			"time": 12,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {},
			"testPassFailCounts": {},
			"times": [
				12
			],
			"allTests": [
				{}
			]
		},
		{
			"id": "4ec5b31d-9925-47c9-859b-eafcc4272277",
			"name": "Add Reading and Unfinished Book with \"Dicoding\" Name",
			"url": "http://localhost:5000/books",
			"time": 11,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {},
			"testPassFailCounts": {},
			"times": [
				11
			],
			"allTests": [
				{}
			]
		},
		{
			"id": "5a53976b-2b40-4228-97aa-654f59510617",
			"name": "Add Unreading Books and Unfinished Book \"Dicoding\" Name",
			"url": "http://localhost:5000/books",
			"time": 12,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {},
			"testPassFailCounts": {},
			"times": [
				12
			],
			"allTests": [
				{}
			]
		},
		{
			"id": "e9c15be7-a7c6-4605-a0d0-cc4540f70b3e",
			"name": "Add Unreading Books and Unfinished Book",
			"url": "http://localhost:5000/books",
			"time": 11,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {},
			"testPassFailCounts": {},
			"times": [
				11
			],
			"allTests": [
				{}
			]
		},
		{
			"id": "6759e1e4-2b11-4ca6-b342-0375f871cddb",
			"name": "[Optional] Get All Reading Books",
			"url": "http://localhost:5000/books?reading=1",
			"time": 28,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"status code should be 200": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body object should have correct property and value": true,
				"response body data object should have a array books and contains 2 items": false,
				"the books should have contains only name and publisher property": false
			},
			"testPassFailCounts": {
				"status code should be 200": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body object should have correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"response body data object should have a array books and contains 2 items": {
					"pass": 0,
					"fail": 1
				},
				"the books should have contains only name and publisher property": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				28
			],
			"allTests": [
				{
					"status code should be 200": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body object should have correct property and value": true,
					"response body data object should have a array books and contains 2 items": false,
					"the books should have contains only name and publisher property": false
				}
			]
		},
		{
			"id": "f77c3766-7071-44e1-9e59-bd42080b89c7",
			"name": "[Optional] Get All Unreading Books",
			"url": "http://localhost:5000/books?reading=0",
			"time": 10,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"status code should be 200": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body object should have correct property and value": true,
				"response body data object should have a array books and contains at 2 items": false,
				"the books should have contains only name and publisher property": false
			},
			"testPassFailCounts": {
				"status code should be 200": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body object should have correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"response body data object should have a array books and contains at 2 items": {
					"pass": 0,
					"fail": 1
				},
				"the books should have contains only name and publisher property": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				10
			],
			"allTests": [
				{
					"status code should be 200": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body object should have correct property and value": true,
					"response body data object should have a array books and contains at 2 items": false,
					"the books should have contains only name and publisher property": false
				}
			]
		},
		{
			"id": "ae55a55c-04c0-4690-b77b-48c0c791f3a4",
			"name": "[Optional] Get All Finished Books",
			"url": "http://localhost:5000/books?finished=1",
			"time": 16,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"status code should be 200": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body object should have correct property and value": true,
				"response body data object should have a array books and contains 1 items": false,
				"the books should have contains only name and publisher property": false
			},
			"testPassFailCounts": {
				"status code should be 200": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body object should have correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"response body data object should have a array books and contains 1 items": {
					"pass": 0,
					"fail": 1
				},
				"the books should have contains only name and publisher property": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				16
			],
			"allTests": [
				{
					"status code should be 200": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body object should have correct property and value": true,
					"response body data object should have a array books and contains 1 items": false,
					"the books should have contains only name and publisher property": false
				}
			]
		},
		{
			"id": "fe6a4267-6ecf-4b18-beaf-9a819f75d3e4",
			"name": "[Optional] Get All Unfinished Books",
			"url": "http://localhost:5000/books?finished=0",
			"time": 9,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"status code should be 200": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body object should have correct property and value": true,
				"response body data object should have a array books and contains 3 items": false,
				"the books should have contains only name and publisher property": false
			},
			"testPassFailCounts": {
				"status code should be 200": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body object should have correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"response body data object should have a array books and contains 3 items": {
					"pass": 0,
					"fail": 1
				},
				"the books should have contains only name and publisher property": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				9
			],
			"allTests": [
				{
					"status code should be 200": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body object should have correct property and value": true,
					"response body data object should have a array books and contains 3 items": false,
					"the books should have contains only name and publisher property": false
				}
			]
		},
		{
			"id": "a2f18886-afd1-4d92-aeec-653df54eece8",
			"name": "[Optional] Get All Books Contains \"Dicoding\" Name",
			"url": "http://localhost:5000/books?name=Dicoding",
			"time": 10,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"status code should be 200": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body object should have correct property and value": true,
				"response body data object should have a array books and contains 2 items": true,
				"the books should have contains only name and publisher property": true
			},
			"testPassFailCounts": {
				"status code should be 200": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body object should have correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"response body data object should have a array books and contains 2 items": {
					"pass": 1,
					"fail": 0
				},
				"the books should have contains only name and publisher property": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				10
			],
			"allTests": [
				{
					"status code should be 200": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body object should have correct property and value": true,
					"response body data object should have a array books and contains 2 items": true,
					"the books should have contains only name and publisher property": true
				}
			]
		}
	],
	"count": 1,
	"totalTime": 2007,
	"collection": {
		"requests": [
			{
				"id": "b9d9b647-9086-44fc-a478-f4805d465da3",
				"method": "POST"
			},
			{
				"id": "600e1121-f19a-4fce-83d8-2e33f04ee62f",
				"method": "POST"
			},
			{
				"id": "060b7cad-f101-4bbc-92f5-b866c703ba42",
				"method": "POST"
			},
			{
				"id": "b1c866b1-e47d-4135-8bc8-3c646657dbf1",
				"method": "GET"
			},
			{
				"id": "82d116b7-c81f-42bc-b58e-92c6d4b3e1b0",
				"method": "GET"
			},
			{
				"id": "72835945-79a5-4767-acae-f9d4f9510085",
				"method": "GET"
			},
			{
				"id": "53b9f9d4-cdba-40c9-ba32-8ae5c8dd3a9b",
				"method": "PUT"
			},
			{
				"id": "43059da2-5e56-4428-a0d7-9bc357052ca0",
				"method": "PUT"
			},
			{
				"id": "de5b43e1-7aa7-4c63-8d35-7c941be57dce",
				"method": "PUT"
			},
			{
				"id": "56e18883-93fe-4c95-8c40-453a8af82502",
				"method": "PUT"
			},
			{
				"id": "ae89562f-01a2-4d48-864e-4e4ffd7eec39",
				"method": "DELETE"
			},
			{
				"id": "2e1e8c94-2ff7-4e71-bf05-87df5421fafc",
				"method": "DELETE"
			},
			{
				"id": "23f9e914-959b-45e0-8a6d-2f187181c68d",
				"method": "POST"
			},
			{
				"id": "4ec5b31d-9925-47c9-859b-eafcc4272277",
				"method": "POST"
			},
			{
				"id": "5a53976b-2b40-4228-97aa-654f59510617",
				"method": "POST"
			},
			{
				"id": "e9c15be7-a7c6-4605-a0d0-cc4540f70b3e",
				"method": "POST"
			},
			{
				"id": "6759e1e4-2b11-4ca6-b342-0375f871cddb",
				"method": "GET"
			},
			{
				"id": "f77c3766-7071-44e1-9e59-bd42080b89c7",
				"method": "GET"
			},
			{
				"id": "ae55a55c-04c0-4690-b77b-48c0c791f3a4",
				"method": "GET"
			},
			{
				"id": "fe6a4267-6ecf-4b18-beaf-9a819f75d3e4",
				"method": "GET"
			},
			{
				"id": "a2f18886-afd1-4d92-aeec-653df54eece8",
				"method": "GET"
			}
		]
	}
}